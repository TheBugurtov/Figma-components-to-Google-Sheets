const fetch = require('node-fetch');
const { google } = require('googleapis');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const FIGMA_TOKEN = process.env.FIGMA_TOKEN;
const FIGMA_FILE_KEY = 'oZGlxnWyOHTAgG6cyLkNJh';
const GOOGLE_SHEETS_ID = '1liLtRG7yUe1T5wfwEqdOy_B4H-tne2cDoBMIbZZnTUI';
const GOOGLE_CREDENTIALS = JSON.parse(process.env.GOOGLE_CREDENTIALS);
const COMPONENTS_LIMIT = 10; // –ñ—ë—Å—Ç–∫–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ 10 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

async function getFigmaComponents() {
  console.log('üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ Figma...');
  const response = await fetch(`https://api.figma.com/v1/files/${FIGMA_FILE_KEY}/components`, {
    headers: { 'X-FIGMA-TOKEN': FIGMA_TOKEN }
  });
  
  if (!response.ok) throw new Error(`Figma API error: ${response.statusText}`);
  const data = await response.json();
  
  if (!data.meta?.components?.length) {
    throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
  }
  
  console.log(`üìä –í—Å–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: ${data.meta.components.length}`);
  return data.meta.components.slice(0, COMPONENTS_LIMIT); // –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10
}

async function updateGoogleSheets(components) {
  console.log('üìù –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏...');
  
  const auth = new google.auth.GoogleAuth({
    credentials: GOOGLE_CREDENTIALS,
    scopes: ['https://www.googleapis.com/auth/spreadsheets'],
  });

  const sheets = google.sheets({ version: 'v4', auth });

  // 1. –û—á–∏—â–∞–µ–º –ª–∏—Å—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é
  await sheets.spreadsheets.values.clear({
    spreadsheetId: GOOGLE_SHEETS_ID,
    range: 'A:Z', // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–æ–ª–æ–Ω–∫–∏
  });

  // 2. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const rows = [
    ['‚Ññ', '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π', '–°—Å—ã–ª–∫–∞', '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'],
    ...components.map((comp, index) => [
      index + 1,
      comp.name,
      comp.instances_count || 0,
      `=HYPERLINK("https://www.figma.com/file/${FIGMA_FILE_KEY}/?node-id=${comp.node_id}", "–û—Ç–∫—Ä—ã—Ç—å")`,
      new Date().toLocaleString()
    ])
  ];

  console.log('–ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:', rows.slice(0, 3)); // –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏

  // 3. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  await sheets.spreadsheets.values.update({
    spreadsheetId: GOOGLE_SHEETS_ID,
    range: 'A1', // –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
    valueInputOption: 'USER_ENTERED',
    resource: { values: rows }
  });

  console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ 10 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤!');
}

async function main() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–≤–Ω–æ 10 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    const components = await getFigmaComponents();
    console.log('üîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º 10 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');
    console.log(components.map(c => `- ${c.name}`).join('\n'));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    await updateGoogleSheets(components);
    
    console.log(`üéâ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É: 
    https://docs.google.com/spreadsheets/d/${GOOGLE_SHEETS_ID}/edit`);
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

main();