const fetch = require('node-fetch');
const { google } = require('googleapis');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const FIGMA_TOKEN = process.env.FIGMA_TOKEN;
const FIGMA_FILE_KEY = 'oZGlxnWyOHTAgG6cyLkNJh';
const GOOGLE_SHEETS_ID = '1liLtRG7yUe1T5wfwEqdOy_B4H-tne2cDoBMIbZZnTUI';
const GOOGLE_CREDENTIALS = JSON.parse(process.env.GOOGLE_CREDENTIALS);
const TEST_MODE = true; // –†–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const MAX_COMPONENTS = 10; // –õ–∏–º–∏—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞

async function getFigmaComponents() {
  console.log('üîÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ Figma...');
  const response = await fetch(`https://api.figma.com/v1/files/${FIGMA_FILE_KEY}/components`, {
    headers: { 'X-FIGMA-TOKEN': FIGMA_TOKEN }
  });
  
  if (!response.ok) throw new Error(`Figma API error: ${response.statusText}`);
  return await response.json();
}

async function updateGoogleSheets(data) {
  console.log('üìä –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Google Sheets...');
  
  const auth = new google.auth.GoogleAuth({
    credentials: GOOGLE_CREDENTIALS,
    scopes: ['https://www.googleapis.com/auth/spreadsheets'],
  });

  const sheets = google.sheets({ version: 'v4', auth });

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ...');
    await sheets.spreadsheets.get({ spreadsheetId: GOOGLE_SHEETS_ID });
  } catch (error) {
    throw new Error(`üö´ –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: ${error.message}\n–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ ${GOOGLE_CREDENTIALS.client_email} –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ`);
  }

  // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  const header = ['–ù–∞–∑–≤–∞–Ω–∏–µ', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π', '–°—Å—ã–ª–∫–∞', '–û–ø–∏—Å–∞–Ω–∏–µ'];
  const rows = data.map(comp => [
    comp.name,
    comp.instances_count || 0,
    `=HYPERLINK("https://www.figma.com/file/${FIGMA_FILE_KEY}/?node-id=${comp.node_id}", "–û—Ç–∫—Ä—ã—Ç—å")`,
    comp.description || '‚Äî'
  ]);

  // –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
  console.log('‚úçÔ∏è –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
  await sheets.spreadsheets.values.update({
    spreadsheetId: GOOGLE_SHEETS_ID,
    range: 'A1',
    valueInputOption: 'USER_ENTERED',
    resource: { values: [header, ...rows] }
  });

  console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã!');
  console.log('üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É: https://docs.google.com/spreadsheets/d/' + GOOGLE_SHEETS_ID);
}

async function main() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞...');
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    const { meta } = await getFigmaComponents();
    if (!meta?.components) throw new Error('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    
    console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${meta.components.length} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤`);
    
    // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –¥–ª—è —Ç–µ—Å—Ç–∞
    const testData = meta.components.slice(0, MAX_COMPONENTS);
    console.log(`üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${testData.length} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤`);
    console.log('üìù –°–ø–∏—Å–æ–∫:', testData.map(c => c.name).join(', '));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    await updateGoogleSheets(testData);
    
    console.log('üéâ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É');
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

main();