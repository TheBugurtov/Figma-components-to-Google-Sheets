const fs = require('fs');
const fetch = require('node-fetch');
const { GoogleSpreadsheet } = require('google-spreadsheet');

// === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
const FIGMA_TOKEN = process.env.FIGMA_TOKEN;
const GOOGLE_CREDENTIALS = JSON.parse(process.env.GOOGLE_CREDENTIALS);
const GOOGLE_SHEETS_ID = process.env.GOOGLE_SHEETS_ID;

// === –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∑ Figma ===
async function getFigmaComponents(fileKey) {
    const url = `https://api.figma.com/v1/files/${fileKey}/components`;
    const res = await fetch(url, {
        headers: { 'X-Figma-Token': FIGMA_TOKEN }
    });

    if (!res.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ Figma API: ${res.status} ${res.statusText}`);
    }

    const data = await res.json();
    return data.meta.components || [];
}

// === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
(async () => {
    console.log('üöÄ –°—Ç–∞—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞...');

    // –ß–∏—Ç–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ figma_files.txt
    const files = fs.readFileSync('figma_files.txt', 'utf8')
        .split('\n')
        .map(f => f.trim())
        .filter(Boolean);

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
    const doc = new GoogleSpreadsheet(GOOGLE_SHEETS_ID);
    await doc.useServiceAccountAuth(GOOGLE_CREDENTIALS);
    await doc.loadInfo();
    const sheet = doc.sheetsByIndex[0];
    await sheet.clear();
    await sheet.setHeaderRow(['name', 'description', 'page']);

    for (const fileUrl of files) {
        console.log(`üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: ${fileUrl}`);
        const fileKey = fileUrl.split('/file/')[1].split('/')[0];

        const components = await getFigmaComponents(fileKey);
        console.log(`   –í—Å–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ —Ñ–∞–π–ª–µ: ${components.length}`);

        // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –Ω–∞–ª–∏—á–∏—é #
        const componentsWithTags = components.filter(c =>
            typeof c.description === 'string' && c.description.includes('#')
        );

        console.log(`   –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å —Ç–µ–≥–∞–º–∏: ${componentsWithTags.length}`);

        // –ó–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É
        await sheet.addRows(
            componentsWithTags.map(c => ({
                name: c.name,
                description: c.description || '',
                page: c.pageName || ''
            }))
        );
    }

    console.log('‚úÖ –ì–æ—Ç–æ–≤–æ! –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å —Ç–µ–≥–∞–º–∏ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ Google Sheets.');
})();
