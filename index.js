const fetch = require('node-fetch');
const { google } = require('googleapis');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  FIGMA_TOKEN: process.env.FIGMA_TOKEN,
  FIGMA_FILE_KEY: 'oZGlxnWyOHTAgG6cyLkNJh',
  GOOGLE_SHEETS_ID: '1liLtRG7yUe1T5wfwEqdOy_B4H-tne2cDoBMIbZZnTUI',
  GOOGLE_CREDENTIALS: JSON.parse(process.env.GOOGLE_CREDENTIALS),
  COMPONENTS_LIMIT: 10,
  FRAME_NAME: "Component" // –ò–º—è —Ñ—Ä–µ–π–º–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
};

async function getFigmaFileStructure() {
  console.log('üìÇ –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–∞...');
  const response = await fetch(`https://api.figma.com/v1/files/${CONFIG.FIGMA_FILE_KEY}`, {
    headers: { 'X-FIGMA-TOKEN': CONFIG.FIGMA_TOKEN }
  });
  
  if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ API: ${response.statusText}`);
  return await response.json();
}

function findComponentsInFrames(document, frameName) {
  console.log(`üîç –ò—â–µ–º —Ñ—Ä–µ–π–º—ã —Å –∏–º–µ–Ω–µ–º "${frameName}"...`);
  const components = [];
  
  function traverse(node) {
    if (node.name === frameName && node.type === "FRAME") {
      console.log(`–ù–∞–π–¥–µ–Ω —Ñ—Ä–µ–π–º "${frameName}" (ID: ${node.id})`);
      if (node.children) {
        node.children.forEach(child => {
          if (child.type === "COMPONENT") {
            components.push(child);
          }
        });
      }
    }
    
    if (node.children) {
      node.children.forEach(traverse);
    }
  }
  
  document.document.children.forEach(traverse);
  return components;
}

async function updateGoogleSheets(components) {
  const auth = new google.auth.GoogleAuth({
    credentials: CONFIG.GOOGLE_CREDENTIALS,
    scopes: ['https://www.googleapis.com/auth/spreadsheets'],
  });

  const sheets = google.sheets({ version: 'v4', auth });

  // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  const rows = [
    ['–ö–æ–º–ø–æ–Ω–µ–Ω—Ç', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π', '–°—Å—ã–ª–∫–∞', '–§—Ä–µ–π–º-–∏—Å—Ç–æ—á–Ω–∏–∫'],
    ...components.slice(0, CONFIG.COMPONENTS_LIMIT).map(comp => [
      comp.name,
      comp.instances_count || 0,
      `https://www.figma.com/file/${CONFIG.FIGMA_FILE_KEY}/?node-id=${comp.id}`,
      CONFIG.FRAME_NAME
    ])
  ];

  console.log('üìù –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:', rows.slice(1, 3));

  // –û—á–∏—Å—Ç–∫–∞ –∏ –∑–∞–ø–∏—Å—å
  await sheets.spreadsheets.values.clear({
    spreadsheetId: CONFIG.GOOGLE_SHEETS_ID,
    range: 'A1:D1000'
  });

  await sheets.spreadsheets.values.update({
    spreadsheetId: CONFIG.GOOGLE_SHEETS_ID,
    range: 'A1',
    valueInputOption: 'USER_ENTERED',
    resource: { values: rows }
  });
}

async function main() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–∞
    const fileData = await getFigmaFileStructure();
    
    // –ò—â–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ñ—Ä–µ–π–º–∞—Ö
    const components = findComponentsInFrames(fileData, CONFIG.FRAME_NAME);
    
    if (components.length === 0) {
      throw new Error(`–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤–æ —Ñ—Ä–µ–π–º–∞—Ö —Å –∏–º–µ–Ω–µ–º "${CONFIG.FRAME_NAME}"`);
    }
    
    console.log(`üîß –ù–∞–π–¥–µ–Ω–æ ${components.length} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ —Ñ—Ä–µ–π–º–∞—Ö "${CONFIG.FRAME_NAME}":`);
    console.log(components.map(c => `- ${c.name}`).join('\n'));
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É
    await updateGoogleSheets(components);
    
    console.log(`‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–∞–±–ª–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: 
    https://docs.google.com/spreadsheets/d/${CONFIG.GOOGLE_SHEETS_ID}/edit`);
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

main();