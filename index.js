const fetch = require('node-fetch');
const { google } = require('googleapis');

// –ñ–Å–°–¢–ö–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò
const CONFIG = {
  FIGMA_TOKEN: process.env.FIGMA_TOKEN,
  FIGMA_FILE_KEY: 'oZGlxnWyOHTAgG6cyLkNJh',
  GOOGLE_SHEETS_ID: '1liLtRG7yUe1T5wfwEqdOy_B4H-tne2cDoBMIbZZnTUI',
  GOOGLE_CREDENTIALS: JSON.parse(process.env.GOOGLE_CREDENTIALS),
  MAX_COMPONENTS: 10 // –ù–ï –ú–ï–ù–Ø–¢–¨!
};

// –ñ—ë—Å—Ç–∫–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
function enforceLimit(components) {
  console.log(`üõë –ñ—ë—Å—Ç–∫–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: ${CONFIG.MAX_COMPONENTS} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤`);
  return components.slice(0, CONFIG.MAX_COMPONENTS);
}

async function getComponents() {
  console.log('üîê –ü–æ–ª—É—á–∞–µ–º —Ä–æ–≤–Ω–æ 10 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
  const response = await fetch(
    `https://api.figma.com/v1/files/${CONFIG.FIGMA_FILE_KEY}/components`,
    { headers: { 'X-FIGMA-TOKEN': CONFIG.FIGMA_TOKEN } }
  );
  
  const data = await response.json();
  return enforceLimit(data.meta?.components || []);
}

async function updateSheets(components) {
  const auth = new google.auth.GoogleAuth({
    credentials: CONFIG.GOOGLE_CREDENTIALS,
    scopes: ['https://www.googleapis.com/auth/spreadsheets']
  });

  const sheets = google.sheets({ version: 'v4', auth });
  
  // 1. –ñ—ë—Å—Ç–∫–∞—è –æ—á–∏—Å—Ç–∫–∞
  await sheets.spreadsheets.values.clear({
    spreadsheetId: CONFIG.GOOGLE_SHEETS_ID,
    range: 'A1:Z1000'
  });

  // 2. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–æ–≤–Ω–æ 10 —Å—Ç—Ä–æ–∫
  const rows = [
    ['‚Ññ', '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π'],
    ...components.map((c, i) => [i + 1, c.name, c.instances_count || 0])
  ];

  // 3. –ó–∞–ø–∏—Å—å
  await sheets.spreadsheets.values.update({
    spreadsheetId: CONFIG.GOOGLE_SHEETS_ID,
    range: 'A1',
    valueInputOption: 'USER_ENTERED',
    resource: { values: rows }
  });
}

async function main() {
  try {
    console.log('üîÑ –°—Ç–∞—Ä—Ç (—Å—Ç—Ä–æ–≥–æ 10 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤)...');
    const components = await getComponents();
    
    if (components.length !== CONFIG.MAX_COMPONENTS) {
      throw new Error(`–û–∂–∏–¥–∞–ª–æ—Å—å ${CONFIG.MAX_COMPONENTS} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤`);
    }
    
    console.log('üìù –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');
    console.log(components.map(c => `- ${c.name}`).join('\n'));
    
    await updateSheets(components);
    console.log('‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É.');
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
main();